{"version":3,"sources":["actions/boardActions.ts","reducers/boardReducer.ts","constants.ts","actions/playersActions.ts","models/Player.ts","reducers/playersReducer.ts","store.ts","components/Button.tsx","components/InlineList.tsx","containers/Header.tsx","containers/Board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["resetBoard","createAction","dropCoin","x","playerId","payload","getBoard","Array","from","length","getDirectionWinCoordinates","board","coordinates","conditionFn","mapFn","result","y","col","push","initialState","coinsCount","filledCols","winnerId","undefined","boardReducer","createReducer","builder","addCase","state","action","findIndex","_","_y","nextValue","winCoordinates","fromX","WIN_COINS_COUNT","toX","fromY","toY","_getDirectionWinCoordinates","bind","paramsArr","params","getWinCoordinates","forEach","Infinity","resetActivePlayer","switchActivePlayer","Player","dto","id","name","colorClass","order","this","count","getActivePlayerId","players","prevValue","sortedPlayers","Object","values","sort","a","b","findNextActivePlayer","find","player","nextActivePlayer","playersArr","activePlayerId","playersReducer","reducers","combineReducers","store","createStore","Button","props","className","onClick","children","type","InlineList","items","itemClassNameFn","isItemActiveFn","getItemClassName","item","classList","join","map","Header","useSelector","dispatch","useDispatch","winner","isDraw","COLS","Board","useEffect","getCoinClassName","row","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAEaA,EAAaC,YAAa,eAE1BC,EAAWD,YAAa,aAAa,SAACE,EAAWC,GAAZ,MAAkC,CAClFC,QAAS,CAAEF,IAAGC,gBCCVE,EAAW,WACf,OAAOC,MAAMC,KAAK,CAAEC,OCPF,IDOkB,WAClC,OAAOF,MAAMC,KAAK,CAAEC,OCPJ,IDOoB,kBAAM,SAIxCC,EAA6B,SACjCC,EACAP,EACAQ,EACAC,EACAC,GAIA,IAFA,IAAIC,EAAyB,GAEtBF,EAAYD,IAAc,CAC/B,MAAiBA,EAATT,EAAR,EAAQA,EAAGa,EAAX,EAAWA,EACLC,EAAMN,EAAMR,GAElB,GAAIc,GAAOA,EAAID,KAAOZ,GAGpB,GAFAW,EAAOG,KAAKN,GAERG,EAAON,QCzBc,ED0BvB,OAAOM,OAGTA,EAAS,GAGXH,EAAcE,EAAMF,KA8ClBO,EAAe,CACnBR,MAAOL,IACPc,WAAY,EACZC,WAAY,GACZC,cAAUC,GAuCGC,EApCMC,YAAcN,GAAc,SAAAO,GAC/CA,EAAQC,QAAQ3B,GAAY,SAAA4B,GAC1BA,EAAMjB,MAAQL,IACdsB,EAAMR,WAAa,EACnBQ,EAAMP,WAAa,GACnBO,EAAMN,cAAWC,KAGnBG,EAAQC,QAAQzB,GAAU,SAAC0B,EAAOC,GAChC,MAAwBA,EAAOxB,QAAvBF,EAAR,EAAQA,EAAGC,EAAX,EAAWA,SAELY,EAAIY,EAAMjB,MAAMR,GAAG2B,WAAU,SAACC,EAAGC,EAAIf,GACzC,IAAMgB,EAAYhB,EAAIe,EAAK,GAE3B,YAAqBT,IAAdU,GAA2BA,EAAY,KAGhDL,EAAMjB,MAAMR,GAAGa,GAAKZ,EACpBwB,EAAMR,aAEDJ,IACHY,EAAMP,WAAWlB,IAAK,GAGxB,IAAM+B,EAzEgB,SAACvB,EAAeR,EAAWa,GAiCnD,IAhCA,IAAMZ,EAAWO,EAAMR,GAAGa,GAEpBmB,EAAQhC,EADJiC,EAEJC,EAAMlC,EAFFiC,EAGJE,EAAQtB,EAHJoB,EAIJG,EAAMvB,EAJFoB,EAMJI,EAA8B9B,EAA2B+B,UAAKlB,EAAWZ,EAAOP,GAEhFsC,EAA8D,CAClE,CACE,CAAEvC,EAAGgC,EAAOnB,KACZ,qBAAGb,GAAakC,GAChB,kBAAe,CAAElC,EAAjB,EAAGA,EAAqB,EAAGa,EAA3B,EAAMA,KAER,CACE,CAAEb,IAAGa,EAAGsB,GACR,qBAAGtB,GAAauB,GAChB,kBAAe,CAAEpC,EAAjB,EAAGA,EAAiBa,EAApB,EAAMA,EAAqB,KAE7B,CACE,CAAEb,EAAGgC,EAAOnB,EAAGsB,GACf,gBAAGnC,EAAH,EAAGA,EAAGa,EAAN,EAAMA,EAAN,OAAcb,GAAKkC,GAAOrB,GAAKuB,GAC/B,kBAAe,CAAEpC,EAAjB,EAAGA,EAAqB,EAAGa,EAA3B,EAAMA,EAA4B,KAEpC,CACE,CAAEb,EAAGgC,EAAOnB,EAAGuB,GACf,gBAAGpC,EAAH,EAAGA,EAAGa,EAAN,EAAMA,EAAN,OAAcb,GAAKkC,GAAOrB,GAAKsB,GAC/B,kBAAe,CAAEnC,EAAjB,EAAGA,EAAqB,EAAGa,EAA3B,EAAMA,EAA4B,MAItC,MAAmB0B,EAAnB,eAA8B,CAAzB,IAAIC,EAAM,KACP5B,EAASyB,EAA2B,WAA3B,cAA+BG,IAE9C,GAAI5B,EACF,OAAOA,GAoCc6B,CAAkBhB,EAAMjB,MAAOR,EAAGa,GAErDkB,IACFA,EAAeW,SAAQ,YAAe,IAAZ1C,EAAW,EAAXA,EAAGa,EAAQ,EAARA,EAC3BY,EAAMjB,MAAMR,GAAGa,GAAK8B,OAGtBlB,EAAMN,SAAWlB,SErHV2C,EAAoB9C,YAAa,uBAEjC+C,EAAqB/C,YAAa,wB,OCF1BgD,EAQnB,aAAoD,IAAD,IAAvCC,EAAuC,uDAAJ,GAAI,yBALnDC,QAKmD,OAJnDC,UAImD,OAHnDC,gBAGmD,OAFnDC,WAEmD,EACjDC,KAAKJ,KAAOF,EAAOO,MACnBD,KAAKH,KAAL,UAAYF,EAAIE,YAAhB,yBAAkCG,KAAKJ,IACvCI,KAAKF,WAAL,UAAkBH,EAAIG,kBAAtB,QAAoC,GACpCE,KAAKD,MAAQC,KAAKJ,IAZDF,EACZO,MAAQ,ECGjB,IAAMC,EAAoB,SAACC,EAAqBC,GAAwB,IAAD,EAC/DC,EAAgBC,OAAOC,OAAOJ,GACjCK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,GAAKc,EAAEd,MACxBY,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEV,MAAQW,EAAEX,SAE9B,IAAKK,EACH,OAAOC,EAAc,GAAGT,GAG1B,IAAMe,EAAuB,SAACpD,GAC5B,OAAO8C,EAAcO,MAAK,SAAAC,GAAM,OAAItD,EAAMsD,GAAUtD,EAAM4C,EAAQC,QAG9DU,EAAgB,UAAGH,GAAqB,SAAAE,GAAM,OAAIA,EAAOd,gBAAzC,QAAmDY,GAAqB,SAAAE,GAAM,OAAIA,EAAOjB,MAE/G,OAAO,OAACkB,QAAD,IAACA,IAAoBT,EAAc,IAAIT,IAG1CmB,EAAa,CACjB,IAAIrB,EAAO,CAAEI,WAAY,iBACzB,IAAIJ,EAAO,CAAEI,WAAY,iBAIrBK,EAAsB,GAE5BY,EAAWzB,SAAQ,SAAAuB,GACjBV,EAAQU,EAAOjB,IAAMiB,KAGvB,IAAMjD,EAAe,CACnBoD,eAAgBd,EAAkBC,GAClCA,WAeac,EAZQ/C,YAAcN,GAAc,SAAAO,GACjDA,EAAQC,QAAQoB,GAAmB,SAAAnB,GACjCA,EAAM2C,eAAiBd,EAAkB7B,EAAM8B,YAGjDhC,EAAQC,QAAQqB,GAAoB,SAAApB,GAClC,IAAQ2C,EAA4B3C,EAA5B2C,eAAgBb,EAAY9B,EAAZ8B,QAExB9B,EAAM2C,eAAiBd,EAAkBC,EAASa,SC7ChDE,EAAWC,YAAgB,CAC/B/D,MAAOa,EACPkC,QAASc,IASIG,EANDC,YAAYH,G,eCWXI,EAZA,SAACC,GACd,IAAQC,EAAiCD,EAAjCC,UAAWC,EAAsBF,EAAtBE,QAASC,EAAaH,EAAbG,SAE5B,OACE,wBACEC,KAAK,SACLH,UAAS,wCAA4BA,QAA5B,IAA4BA,IAAa,IAClDC,QAASA,EAHX,SAIEC,KCsBSE,EA7BI,SAAsBL,GACvC,IAAQM,EAA2CN,EAA3CM,MAAOC,EAAoCP,EAApCO,gBAAiBC,EAAmBR,EAAnBQ,eAE1BC,EAAmB,SAACC,GACxB,IAAMC,EAAY,CAAC,YAUnB,OARIJ,GACFI,EAAUvE,KAAKmE,EAAgBG,IAG7BF,GAAkBA,EAAeE,IACnCC,EAAUvE,KAAK,WAGVuE,EAAUC,KAAK,MAGxB,OACE,qBAAKX,UAAU,MAAf,SACGK,EAAMO,KAAI,SAAAH,GAAI,OACb,qBAEET,UAAWQ,EAAiBC,GAF9B,SAGEA,EAAKpC,MAFAoC,EAAKrC,UCaLyC,EAlCA,WACb,MAAiCC,aAAY,SAACjE,GAAD,OAAsBA,EAAMjB,SAAjES,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,SACpB,EAAoCuE,aAAY,SAACjE,GAAD,OAAsBA,EAAM8B,WAApEa,EAAR,EAAQA,eAAgBb,EAAxB,EAAwBA,QAClBoC,EAAWC,cAEXC,EAAS1E,GAAYoC,EAAQpC,GAC7B2E,EAAS7E,GPbc8E,GOe7B,OACE,sBAAKnB,UAAU,yBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEK,MAAOvB,OAAOC,OAAOJ,GACrB2B,gBAAiB,SAAAjB,GAAM,OAAIA,EAAOf,YAClCiC,eAAgB,SAAAlB,GAAM,OAAK4B,IAAWC,GAAU7B,EAAOjB,KAAOoB,OAGlE,qBAAKQ,UAAU,yBAAf,SACGiB,EACC,eAAC,WAAD,sBACU,wBAAQjB,UAAS,yBAAoBiB,EAAO3C,YAA5C,SAA2D2C,EAAO5C,UAE1E6C,GAAU,SAEhB,qBAAKlB,UAAU,mBAAf,SACE,cAAC,EAAD,CACEA,UAAY3D,EAA2B,GAAd,YACzB4D,QAAS,kBAAMc,EAAS9F,MAF1B,gCCmCOmG,EA/DD,WACZ,MAAoDN,aAAY,SAACjE,GAAD,OAAsBA,EAAMjB,SAApFA,EAAR,EAAQA,MAAOS,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,WAAYC,EAAvC,EAAuCA,SACvC,EAAoCuE,aAAY,SAACjE,GAAD,OAAsBA,EAAM8B,WAApEa,EAAR,EAAQA,eAAgBb,EAAxB,EAAwBA,QAClBoC,EAAWC,cAEjBK,qBAAU,WACRN,EAAU1E,EAAmC4B,IAAtBD,OACtB,CAAC3B,EAAY0E,IAEhB,IAAMO,EAAmB,SAACjG,GACxB,OAAQA,GACN,KAAK,EACH,MAAO,GACT,KAAK0C,IACH,MAAM,GAAN,OAAUY,EAAQpC,GAAoB+B,WAAtC,oBACF,QACE,MAAM,GAAN,OAAUK,EAAQtD,GAAUiD,WAA5B,0BAIN,OACE,sBAAK0B,UAAS,4BAAuBzD,EAAW,sBAAwB,IAAxE,UACE,qBAAKyD,UAAU,QAAf,SACGpE,EAAMgF,KAAI,SAACW,EAAKnG,GAAN,OACT,qBAEE4E,UAAU,aAFZ,SAIGuB,EAAIX,KAAI,SAACvF,EAAUY,GAAX,OACP,qBAEE+D,UAAU,cAFZ,SAIE,qBACEA,UAAS,sBAAiBsB,EAAiBjG,OAJxCY,OALJb,QAgBX,qBAAK4E,UAAU,oBAAf,SACGpE,EAAMgF,KAAI,SAACW,EAAKnG,GAAN,OACT,qBAEE4E,UAAS,qBAAgB1D,EAAWlB,GAAK,oBAAsB,IAFjE,SAIGmG,EAAIX,KAAI,SAAC5D,EAAGf,GAAJ,OACP,qBAEE+D,UAAU,cACVC,QAAS,kBAAMc,EAAS5F,EAASC,EAAGoE,KAHtC,SAKE,qBAAKQ,UAAU,iBAJV/D,OALJb,YCnCFoG,MAXf,WACE,OACE,sBAAKxB,UAAU,uBAAf,UACE,qBAAKA,UAAU,OAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,QCISyB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAD,CAAUvC,MAAOA,EAAjB,SACE,cAAC,IAAMwC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.62e5b0d1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const resetBoard = createAction('RESET_BOARD');\r\n\r\nexport const dropCoin = createAction('DROP_COIN', (x: number, playerId: number) => ({\r\n  payload: { x, playerId },\r\n}));\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { dropCoin, resetBoard } from '../actions/boardActions';\r\nimport { COLS, ROWS, WIN_COINS_COUNT } from '../constants';\r\nimport IBoard from '../models/Board';\r\nimport ICoordinates from '../models/Coordinates';\r\n\r\nconst getBoard = (): IBoard => {\r\n  return Array.from({ length: COLS }, () => {\r\n    return Array.from({ length: ROWS }, () => 0);\r\n  });\r\n};\r\n\r\nconst getDirectionWinCoordinates = (\r\n  board: IBoard,\r\n  playerId: number,\r\n  coordinates: ICoordinates,\r\n  conditionFn: (coordinates: ICoordinates) => boolean,\r\n  mapFn: (coordinates: ICoordinates) => ICoordinates\r\n): ICoordinates[] | undefined => {\r\n  let result: ICoordinates[] = [];\r\n\r\n  while (conditionFn(coordinates)) {\r\n    const { x, y } = coordinates;\r\n    const col = board[x];\r\n\r\n    if (col && col[y] === playerId) {\r\n      result.push(coordinates);\r\n\r\n      if (result.length >= WIN_COINS_COUNT) {\r\n        return result;\r\n      }\r\n    } else {\r\n      result = [];\r\n    }\r\n\r\n    coordinates = mapFn(coordinates);\r\n  }\r\n};\r\n\r\nconst getWinCoordinates = (board: IBoard, x: number, y: number): ICoordinates[] | undefined => {\r\n  const playerId = board[x][y];\r\n  const c = WIN_COINS_COUNT - 1;\r\n  const fromX = x - c;\r\n  const toX = x + c;\r\n  const fromY = y - c;\r\n  const toY = y + c;\r\n\r\n  const _getDirectionWinCoordinates = getDirectionWinCoordinates.bind(undefined, board, playerId);\r\n\r\n  const paramsArr: Parameters<typeof _getDirectionWinCoordinates>[] = [\r\n    [\r\n      { x: fromX, y },\r\n      ({ x }) => x <= toX,\r\n      ({ x, y }) => ({ x: x + 1, y }),\r\n    ],\r\n    [\r\n      { x, y: fromY },\r\n      ({ y }) => y <= toY,\r\n      ({ x, y }) => ({ x, y: y + 1 }),\r\n    ],\r\n    [\r\n      { x: fromX, y: fromY },\r\n      ({ x, y }) => x <= toX && y <= toY,\r\n      ({ x, y }) => ({ x: x + 1, y: y + 1 }),\r\n    ],\r\n    [\r\n      { x: fromX, y: toY },\r\n      ({ x, y }) => x <= toX && y >= fromY,\r\n      ({ x, y }) => ({ x: x + 1, y: y - 1 }),\r\n    ],\r\n  ];\r\n\r\n  for (let params of paramsArr) {\r\n    const result = _getDirectionWinCoordinates(...params);\r\n\r\n    if (result) {\r\n      return result;\r\n    }\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  board: getBoard(),\r\n  coinsCount: 0,\r\n  filledCols: {} as { [key: number]: boolean },\r\n  winnerId: undefined as number | undefined,\r\n};\r\n\r\nconst boardReducer = createReducer(initialState, builder => {\r\n  builder.addCase(resetBoard, state => {\r\n    state.board = getBoard();\r\n    state.coinsCount = 0;\r\n    state.filledCols = {};\r\n    state.winnerId = undefined;\r\n  });\r\n\r\n  builder.addCase(dropCoin, (state, action) => {\r\n    const { x, playerId } = action.payload;\r\n\r\n    const y = state.board[x].findIndex((_, _y, col) => {\r\n      const nextValue = col[_y + 1];\r\n\r\n      return nextValue === undefined || nextValue > 0;\r\n    });\r\n\r\n    state.board[x][y] = playerId;\r\n    state.coinsCount++;\r\n\r\n    if (!y) {\r\n      state.filledCols[x] = true;\r\n    }\r\n\r\n    const winCoordinates = getWinCoordinates(state.board, x, y);\r\n\r\n    if (winCoordinates) {\r\n      winCoordinates.forEach(({ x, y }) => {\r\n        state.board[x][y] = Infinity;\r\n      });\r\n\r\n      state.winnerId = playerId;\r\n    }\r\n  });\r\n});\r\n\r\nexport default boardReducer;\r\n","export const COLS = 7;\r\nexport const ROWS = 6;\r\nexport const MAX_COINS_COUNT = COLS * ROWS;\r\nexport const WIN_COINS_COUNT = 4;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const resetActivePlayer = createAction('RESET_ACTIVE_PLAYER');\r\n\r\nexport const switchActivePlayer = createAction('SWITCH_ACTIVE_PLAYER');\r\n","import IBaseItem from './BaseItem';\r\n\r\nexport default class Player implements IBaseItem {\r\n  static count = 0;\r\n\r\n  id: number;\r\n  name: string;\r\n  colorClass: string;\r\n  order: number;\r\n\r\n  constructor(dto: Partial<Omit<Player, 'id'>> = {}) {\r\n    this.id = ++Player.count;\r\n    this.name = dto.name ?? `Player ${this.id}`;\r\n    this.colorClass = dto.colorClass ?? '';\r\n    this.order = this.id;\r\n  }\r\n}\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { resetActivePlayer, switchActivePlayer } from '../actions/playersActions';\r\nimport Player from '../models/Player';\r\n\r\ntype PlayersMap = { [key: number]: Player };\r\n\r\nconst getActivePlayerId = (players: PlayersMap, prevValue?: number) => {\r\n  const sortedPlayers = Object.values(players)\r\n    .sort((a, b) => a.id - b.id)\r\n    .sort((a, b) => a.order - b.order);\r\n\r\n  if (!prevValue) {\r\n    return sortedPlayers[0].id;\r\n  }\r\n\r\n  const findNextActivePlayer = (mapFn: (player: Player) => number) => {\r\n    return sortedPlayers.find(player => mapFn(player) > mapFn(players[prevValue]));\r\n  };\r\n\r\n  const nextActivePlayer = findNextActivePlayer(player => player.order) ?? findNextActivePlayer(player => player.id);\r\n\r\n  return (nextActivePlayer ?? sortedPlayers[0]).id;\r\n};\r\n\r\nconst playersArr = [\r\n  new Player({ colorClass: 'text-warning' }),\r\n  new Player({ colorClass: 'text-danger' }),\r\n  // more players can be added\r\n];\r\n\r\nconst players: PlayersMap = {};\r\n\r\nplayersArr.forEach(player => {\r\n  players[player.id] = player;\r\n});\r\n\r\nconst initialState = {\r\n  activePlayerId: getActivePlayerId(players),\r\n  players,\r\n};\r\n\r\nconst playersReducer = createReducer(initialState, builder => {\r\n  builder.addCase(resetActivePlayer, state => {\r\n    state.activePlayerId = getActivePlayerId(state.players);\r\n  });\r\n\r\n  builder.addCase(switchActivePlayer, state => {\r\n    const { activePlayerId, players } = state;\r\n\r\n    state.activePlayerId = getActivePlayerId(players, activePlayerId);\r\n  });\r\n});\r\n\r\nexport default playersReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport boardReducer from './reducers/boardReducer';\r\nimport playersReducer from './reducers/playersReducer';\r\n\r\nconst reducers = combineReducers({\r\n  board: boardReducer,\r\n  players: playersReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","import React, { SyntheticEvent } from 'react';\r\n\r\ninterface IProps {\r\n  className?: string;\r\n  onClick: (event: SyntheticEvent) => void;\r\n  children: string;\r\n}\r\n\r\nconst Button = (props: IProps) => {\r\n  const { className, onClick, children } = props;\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`btn btn-sm btn-primary ${className ?? ''}`}\r\n      onClick={onClick}\r\n    >{children}</button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport IBaseItem from '../models/BaseItem';\r\n\r\ninterface IProps<T> {\r\n  items: T[];\r\n  itemClassNameFn?: (item: T) => string;\r\n  isItemActiveFn?: (item: T) => boolean;\r\n}\r\n\r\nconst InlineList = <T extends IBaseItem>(props: IProps<T>) => {\r\n  const { items, itemClassNameFn, isItemActiveFn } = props;\r\n\r\n  const getItemClassName = (item: T): string => {\r\n    const classList = ['col-auto'];\r\n\r\n    if (itemClassNameFn) {\r\n      classList.push(itemClassNameFn(item));\r\n    }\r\n\r\n    if (isItemActiveFn && isItemActiveFn(item)) {\r\n      classList.push('fw-bold');\r\n    }\r\n\r\n    return classList.join(' ');\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {items.map(item => (\r\n        <div\r\n          key={item.id}\r\n          className={getItemClassName(item)}\r\n        >{item.name}</div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InlineList;\r\n","import React, { Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { resetBoard } from '../actions/boardActions';\r\nimport Button from '../components/Button';\r\nimport InlineList from '../components/InlineList';\r\nimport { MAX_COINS_COUNT } from '../constants';\r\nimport Player from '../models/Player';\r\nimport { RootState } from '../store';\r\n\r\nconst Header = () => {\r\n  const { coinsCount, winnerId } = useSelector((state: RootState) => state.board);\r\n  const { activePlayerId, players } = useSelector((state: RootState) => state.players);\r\n  const dispatch = useDispatch();\r\n\r\n  const winner = winnerId && players[winnerId];\r\n  const isDraw = coinsCount >= MAX_COINS_COUNT;\r\n\r\n  return (\r\n    <div className=\"row align-items-center\">\r\n      <div className=\"col-4\">\r\n        <InlineList<Player>\r\n          items={Object.values(players)}\r\n          itemClassNameFn={player => player.colorClass}\r\n          isItemActiveFn={player => !winner && !isDraw && player.id === activePlayerId}\r\n        />\r\n      </div>\r\n      <div className=\"col-4 text-center fs-5\">\r\n        {winner ? (\r\n          <Fragment>\r\n            Winner: <strong className={`d-inline-block ${winner.colorClass}`}>{winner.name}</strong>\r\n          </Fragment>\r\n        ) : isDraw && 'Draw'}\r\n      </div>\r\n      <div className=\"col-auto ms-auto\">\r\n        <Button\r\n          className={!coinsCount ? 'invisible' : ''}\r\n          onClick={() => dispatch(resetBoard())}\r\n        >Restart game</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\nimport { dropCoin } from '../actions/boardActions';\r\nimport { resetActivePlayer, switchActivePlayer } from '../actions/playersActions';\r\n\r\nconst Board = () => {\r\n  const { board, coinsCount, filledCols, winnerId } = useSelector((state: RootState) => state.board);\r\n  const { activePlayerId, players } = useSelector((state: RootState) => state.players);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(!coinsCount ? resetActivePlayer() : switchActivePlayer());\r\n  }, [coinsCount, dispatch]);\r\n\r\n  const getCoinClassName = (playerId: number): string => {\r\n    switch (playerId) {\r\n      case 0:\r\n        return '';\r\n      case Infinity:\r\n        return `${players[winnerId as number].colorClass} animation-flick`;\r\n      default:\r\n        return `${players[playerId].colorClass} board__coin_dropped`;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`position-relative ${winnerId ? 'pointer-events-none' : ''}`}>\r\n      <div className=\"board\">\r\n        {board.map((row, x) => (\r\n          <div\r\n            key={x}\r\n            className=\"board__col\"\r\n          >\r\n            {row.map((playerId, y) => (\r\n              <div\r\n                key={y}\r\n                className=\"board__item\"\r\n              >\r\n                <div\r\n                  className={`board__coin ${getCoinClassName(playerId)}`}\r\n                ></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"board board_front\">\r\n        {board.map((row, x) => (\r\n          <div\r\n            key={x}\r\n            className={`board__col ${filledCols[x] ? 'board__col_filled' : ''}`}\r\n          >\r\n            {row.map((_, y) => (\r\n              <div\r\n                key={y}\r\n                className=\"board__item\"\r\n                onClick={() => dispatch(dropCoin(x, activePlayerId))}\r\n              >\r\n                <div className=\"board__hole\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport Header from './containers/Header';\nimport Board from './containers/Board';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid py-4\">\n      <div className=\"mb-3\">\n        <Header />\n      </div>\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}